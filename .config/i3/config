# Windows key is Mod Key [Mod1 for ALT] [Mod4 for WIN]
set $mod Mod1
set $shutdown shutdown now
set $reboot reboot

for_window [class="^.*"] border pixel 1
for_window [class="^.*"] client.focused          #77dd77 #285577 #ffffff #2e9ef4 #285577

font pango:JetBrainsMono Nerd Font 8
floating_modifier $mod
tiling_drag modifier titlebar

# start a terminal
# bindsym Mod1+Return exec i3-sensible-terminal
bindsym Mod1+Return exec alacritty

bindsym $mod+q kill
bindsym $mod+x exec --no-startup-id ~/Code/test.sh
bindsym $mod+Delete exec $shutdown
bindsym $mod+Shift+Delete exec $reboot

# Letter Key Bindings
# split in horizontal orientation
bindsym $mod+c split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+n focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# enabling rofi
# bindsym $mod+space exec rofi -show drun
bindsym $mod+space exec ~/.dotfiles/.local/bin/apps.sh
bindsym Mod4+space exec ~/.dotfiles/.local/bin/dmenu-shell.sh
# bindsym $mod+space exec dmenu_run -nb '#000000' -nf '#ffffff' -sb '#74c7ec' -sf '#000000' -p "Applications: " -i -fn 'JetBrainsMono'

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
# bindsym $mod+Left focus left
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up
# bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
# bindsym $mod+Shift+Left move left
# bindsym $mod+Shift+Down move down
# bindsym $mod+Shift+Up move up
# bindsym $mod+Shift+Right move right

# Define names for default workspaces for which we configure key bindings later on. We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# bindsym $mod+Tab workspace next
# bindsym $mod+Shift+Tab workspace prev

for_window [window_role="GtkFileChooserDialog"] resize set 800 600
for_window [window_role="GtkFileChooserDialog"] move position center
for_window [class="python3"] floating enable, move position center

for_window [class="firefox"] border pixel 0
for_window [class="zen"] border pixel 0
for_window [class="obsidian"] border pixel 0
for_window [class="Code"] border pixel 0
assign [class="zen"] 1

# Launch ZEN-BROWSER
exec_always --no-startup-id ~/.dotfiles/.local/bin/launch_zen.sh

# Polybar Kill prev instances and create new
exec_always killall polybar
exec_always --no-startup-id ~/.config/polybar/launch_polybar.sh

# Dunst
exec --no-startup-id dunst


# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+Escape exit

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym h resize shrink width 10 px or 10 ppt
  bindsym j resize grow height 10 px or 10 ppt
  bindsym k resize shrink height 10 px or 10 ppt
  bindsym l resize grow width 10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # back to normal: Enter or Escape or $mod+r
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status finds out, if available)
# bar {
#         status_command i3status
#         tray_output primary
# }

# Setting Wallpaper
# exec_always feh --bg-scale $HOME/Downloads/rick-and-morty-rick-5120x2880-9494.png --no-fehbg
# exec_always feh --bg-scale $HOME/Pictures/Random/Black-Venom.jpg --no-fehbg
exec_always feh --bg-scale $HOME/Pictures/Wallpapers/Earth-Wallpaper.jpg --no-fehbg
# exec_always feh --bg-scale $HOME/Downloads/383783.jpg --no-fehbg

# Start XDG autostart .desktop files using dex. See also see [[https://wiki.archlinux.org/index.php/XDG_Autostart]]
exec --no-startup-id dex --autostart --environment i3
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id xss-lock -- i3lock -n
exec --no-startup-id nm-applet
exec --no-startup-id picom

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Scree Brightness
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%-

# Playback Control
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPause exec --no-startup-id playerctl pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# Keyboard Backligth
bindsym XF86KbdBrightnessUp exec --no-startup-id brightnessctl -d 'asus::kbd_backlight' set +1
bindsym XF86KbdBrightnessDown exec --no-startup-id brightnessctl -d 'asus::kbd_backlight' set 1-

# Aura Control
bindsym XF86Launch3 exec "asusctl aura -n"

# Power profile Control
bindsym XF86Launch4 exec --no-startup-id sh -c "asusctl profile --next && killall -SIGUSR1 i3status"

# Screenshot tool
bindsym Ctrl+F6 exec NOW=$(date +%d-%b-%Y_%H-%M-%S) && maim --format png --select > ~/Pictures/Screenshots/$NOW.png && xclip -selection clip -t image/png ~/Pictures/Screenshots/$NOW.png

# Suspend
bindsym $mod+Escape exec /home/yagna/Code/test.sh

## Clipboard Screenshots
# bindsym Ctrl+F6 exec maim | xclip -selection clipboard -t image/png
# bindsym Ctrl+$mod+Print exec maim --window $(xdotool getactivewindow) | xclip -selection clipboard -t image/png
# bindsym Ctrl+Shift+Print exec maim --select | xclip -selection clipAboard -t image/png
