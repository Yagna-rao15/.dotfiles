ls .config/ohmyposh
ls .config/ohmyposh/
curl -s https://ohmyposh.dev/install.sh | bash -s
oh-my-posh
sudo nautilus
man ps
ps -aux
ps -aux | grep Code
sudo pacman -Sy testdisk
man testdisk
mkdir recovery
cd recovery
cat image.dd
testdisk image.dd
sudo testdisk
rm testdisk.log
sleep 0.5
rm .ipynb_checkpoints
rm -rf .ipynb_checkpoints
mkdir CodeForces
mkdir 967(Div-2)
mkdir '967(Div-2)'
cd 967\(Div-2\)
rm -rf 967\(Div-2\)
mkdir 967-Div-2
cd 967-Div-2
cd Code/CodeForces/967-Div-2
g++ 1.c -o 1
cd lab_2
sudo pacman -S texlive-most\

sudo pacman -Sy texlive-most\

sudo pacman -Sy texlive-core
sudo pacman -S pandoc\

jupyter nbconvert --to pdf Lab_2_U22CS104_ML.ipynb
sudo fmtutil-sys --all\

which xelatex\

jupyter nbconvert --to html Lab_2_U22CS104_ML.ipynb
./Lab_2_U22CS104_ML.html
sudo fmtutil-sys --byfmt xelatex\

mv vertopal.com_Lab_2_U22CS104_ML.pdf Lab_2_U22CS104_ML.pdf
mv Lab_2_U22CS104_ML.pdf ~/Code/ML/lab_2
ls Code/ML/lab_2
ls ~Code/ML/lab_2
ls ~/Code/ML/lab_2
g++ test.cpp -o test
./test
g++ -help
g++ -h
man g++
g++ --help
g++ --v
g++ --help | grep version
g++ --version
ls usb
ping 172.16.1.1:8090
mkdir PPA
cd PPA
mpirun ./1
mpirun -np 10 ./2
mpirun -np 7 ./2
mpirun -np 6 ./2
mpirun -np ./1
mpirun -np ./2
mpirun -np 5 ./2
mpirun -np 3 ./2
mpirun -np 8 ./1
mpirun -np 8 ./2
mpirun -np 1 ./2
ping 172.16.1.1:8090/
ping 10.0.2.15/24
ping 10.0.2.15:24
ping 10.0.2.15
sudo pacman -R nautilus
cd .texlive
./texmf-var
rm -rf .texlive
ls .jupyter
starts
\\
ping google.com
zinit
f
nvim ~/.config/tmux/tmux.conf
realpath man
realpath .zshrc
realpath .config/zsh
man nproc
nproc
gcc temp.c -o temp
./temp
gcc 1.c 2.c 3.c -o 1 2 3
gcc 3.c -o 3
cd Code/SS/lab_2
bluetoothctl pairable on
bluetoothctl info
sudo pacman -Sy bluez
sudo systemctl enable --now bluetooth.service
btusb
sudo lsmod| grep btusb
sudo pacman -Sy blueman
bluemoon
bluetooth-player
cd Self
cd pictures
..\\

nvim .vimrc
rm .vimrc
rm .viminfo
rm -rf .vim
rm -rf recovery
rm downloads
rm -rf downloads
nvim .gitignore
ls .config/zsh/
git commit -m "Checkup Commit"
gh status
gh auth status
gh auth refresh
gh auth log
gh auth login
cd .dotfiles/.config/zsh
ls ../bash
echo PATH
mv .config/zsh/.zshenv ~/.zshenv
mv .zshenv .config/zsh/.zshenv
bat .Xauthority
bat .xinitrc

mv Downloads/tmux-cheatsheet.md ~/.config/tmux/tmux-cheetsheet.md
qq
git push origin main\

cd .config/nvim
nvim-lazy
sh -c "$(curl -s https://raw.githubusercontent.com/ibhagwan/fzf-lua/main/scripts/mini.sh)"
cp ~/.dotfiles ~/.dots
cp .dotfiles .dotfiles
cp -r  .dotfiles .dotfiles
cp -r  .dotfiles .dots
ls .dots
git status
git ls-files -z -d | xargs -0 git checkout --
rm -rf .dotfiles
cp ~/.dotfiles/.config/nvim/lua/plugins/lsp.lua ~/.dotfiles/.config/nvim-self/lua/plugins/lsp.lua
cp ~/.dotfiles/.config/nvim/lua/config/lsp.lua ~/.dotfiles/.config/nvim-self/lua/config/lsp.lua
cp ~/.dotfiles/.config/nvim/lua/plugins/mason.lua ~/.dotfiles/.config/nvim-self/lua/plugins/mason.lua
cd .local/share/nvim-self/lazy/ui/lua/nvchad
nvim-self
ls .dotfiles/.config
rm -rf nvim-self
nvim nvim/lua/config/lsp.lua
rm -rf .dots
ls i3
ls .config/i3
mv .config/nvm ~/nvm
rm -rf ~/.config/nvm ~/.config/nvim-self
mv ~/nvm ~/.config/nvm
ls ../.bookmarks
rm -rf ~/.bookmarks
ls ../
git log
git commit -m "OOF Added I3, Tries to add GH and NVM but fixed later"
ls /etc/zsh/zprofile
ls /etc/zsh/
cd /etc/zsh
sudo nvim zprofile
echo $PATH
fd
echo $SHELL
cd /etc/X11
cd xinit
cat xinitrc
cat xserverrc
echo $XINITRC
echo $XRESOURCES
echo BASH
echo $BASH
cat .Xauthority 
mkdir .dotfiles/x11
mv .dotfiles/x11 .dotfiles/x
ls .dotfiles
mv .Xauthority .dotfiles/x/Xauthority
mv .xinitrc .dotfiles/x/xinitrc
ls gh
rm -rf gh
absh
bash
tree
mv README README.md
man grep
man grep -r
git branch --verbose
nvim ~/.zshenv
cat .config/tmux/tmux-cheetsheet.md
echo $(tty)
man startx
git commit -m "Fixed xinitrc and Xauthentication, fixed zsh and bashrc files"
man -t startx
man -t startx | Ip
man -t startx | lp
man -t startx | ip
curl cht.sh/cpp/string
curl cht.sh/cpp/polymorphism
curl cht.sh/cpp/int
clear
curl google.com
cd CodeForces
mkdir 968-Div-2
cd 968-Div-2
cd Code/CodeForces/968-Div-2
abcb
12
abcabcabcabc
gcc 2.c -o 2
./q
g++ 3-1.cpp -o 3
g++ 3-2.cpp -o 3
cd .config/zsh
sudo nvim profile
cx() { cd "$@" && l; }\
fcd() { cd "$(find . -type d -not -path '*/.*' | fzf)" && l; }\
f() { echo "$(find . -type f -not -path '*/.*' | fzf)" | pbcopy }\
fv() { nvim "$(find . -type f -not -path '*/.*' | fzf)" }
cx
man l
fcd
lss nvim
lss .config
ff
xclip -o
man xclip
git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm
tmux detach
\
drwx------ 14 yagna yagna 4096 Aug 25 13:38 .config\
drwxr-xr-x  2 yagna yagna 4096 Aug 23 18:18 Desktop\
drwxr-xr-x  2 yagna yagna 4096 Aug 19 13:48 Documents\
drwxr-xr-x  5 yagna yagna 4096 Aug 25 16:30 .dotfiles\
drwxr-xr-x  9 yagna yagna 4096 Aug 25 12:10 Downloads\
drwxr-xr-x  3 yagna yagna 4096 Aug 25 15:54 go\
drwxr-xr-x  3 yagna yagna 4096 Aug 20 14:11 .ipython\
drwxr-xr-x  4 yagna yagna 4096 Aug 20 14:11 .jupyter\
drwx------  6 yagna yagna 4096 Aug 19 14:15 .local\
drwx------  4 yagna yagna 4096 Aug 19 14:14 .mozilla\
drwxr-xr-x  2 yagna yagna 4096 Aug 19 13:48 Music\
drwxr-xr-x  3 yagna yagna 4096 Aug 25 02:11 Pictures\
drwx------  3 yagna yagna 4096 Aug 23 22:32 .pki\
drwxr-xr-x  2 yagna yagna 4096 Aug 19 13:48 Public\

iwctl
chmod 775 ~/.config/tmux/tmux.conf
w
man w
mux ls
tmux attach-session 2
tmux attach 2
fatfetch
1
0
2
cd Code/ML/
sudo systemctl enable NetworkManager.service
lspci -k
ip link set interface up
ip link set wlp4s0 up
tmux d
tmux l
tmux kill-session -a
cd .config/tmux
tmux new -n fuck
tmux kill-server
tmux run
tmux start-server
man tmux start
nvim .dotfiles/.config/tmux
tmux start
sed
tmux run-shell -b 'command -v fzf'
bluetoothctl advertise
bluetoothctl advertise on
bluetoothctl man
bluetoothctl help
bluetoothctl list\\

bluetoothctl select 38:D5:7A:13:97:FA
bluetoothctl power on
bluetoothctl agent on

bluetoothctl scan on
bluetoothctl devices
networkctl
tracepath 152.59.35.91
ip help
ip address
iproute2
ip
ip route 152.59.35.91
ip route help
ip route get 152.59.35.91
curl icanhzip.com
curl https://icanhzip.com
curl https://icanhazip.com
less $(fzf)
fzf | cat
echo "\n\n# Get IP\nalias IPP='curl https://icanhazip.com'"  >> $(fzf) 
IPP
ip addr show usb0
ping 127.0.0.1\

hostname -I\

mkdir test
cd test
nvm help
nvm install node
nvm -v
npm
rm -rf go
sudo rm -rf go
ld
echo $ZDOTDIR
q\\
q
npm -v
cd ~/.config
ls nvm
cat nvm/README.md
nvm list-remote
nvm install --lts
nvm list
npm init -y
npm install express nodemon
cd Code/test
node index.js
npm i express
npm start
npm run dev
ip addr show
git commit -m "Tweaked Tmux, an Minor nvim fixes"
gcc test.c
ls ~/Downloads
ls Documents
ls .zen
bluetoothctl
cd Code/ML/\\
ls
cp Self/pictures/Wallpapers_Desktop/bg.png
cp Self/pictures/Wallpapers_Desktop/bg.png Code/ML/lab_1/bg.png
lsblk
ls /dev/nvme0n1p3
cd /dev/nvme0n1p3
nautilus admin:/
man unzip
unzip archive\(3\).zip
mv Linear\ Regression\ -\ Sheet1.csv ~/Code/ML
cd ~/Code/ML
mkdir lab_3
mv Linear\ Regression\ -\ Sheet1.csv lab_3
cd lab_
nvim i3
man ls
ls -A
ls -Al
ls -Ab
ls -Ad
ls -d
ls -Af
ls -AF
ls -A --format=WORD
ls -A --format=verbose
ls -A --format=vertical
ls -A --format=long
ls -A --format=commas
ls -A --format=horizontal
ls -A --format=across
ls -A --format=single-column
ls -Ag
ls -Ag --group-directories-first
ls -AgGh --group-directories-first
ls -AgGLh --group-directories-first
ls -AgG --group-directories-first
cd\\

ls -AgGn
ls -AgGnN
ls -AgGnNo
ls -AonN
ls -AonNG
ls -AonNg
ls -AonNGx
ls -AonNgx
ls -AonNgX
ls -lAXZ
ls -oAXZ
ls -AXZ
ls -AX
ls -AX1
ls -lAX
rm test.c a.out
mv CodeForces Code-Forces
cd lab_1
sudo pacman -Sy python-scikit-learn
cd ../lab_2
mv ../lab_3/Linear-Regression.csv Linear-Refression.csv
mv Linear-Refression.csv Linear-Regression.csv
cat csv.h
cat csv.c
gcc -o main csv.c
cd Code/ML/lab_2
cd ../lab_1
cd Code/ML/lab_3
cd ../c
./main\\

gcc -o main main.c csv.c
cd ~/Downloads
fh
unzip archive\(4\).zip
mv housing.csv ~/Code/ML/c/Boston-Housing.csv
cd -
gcc -o main LR-BH.c csv.c
./main
cd Code/PPA/
mkdir lab_4
cd lab_4
firefox
rofi
reboot
fzf
cd Code/PPA/lab_3
mpirun -np 1 ./1
mpirun -np 2\ ./1
mpirun -np 2 ./1
mpirun -np 5 ./1
q;
cat .zshenv
tmux attach
tmux new-session
tmux ls
tmux a
hi
bye
sudo pacman -Sy starship
sudo pacman -R starship
curl -sS https://starship.rs/install.sh | sh
# Locate and delete the starship binary
sh -c 'rm "$(command -v 'starship')"'
git commit -m "Replaced Telescope with fzf(not keybinds), tweaks with nvim and tmux, will fix tomorrow"
man vim
man nvim
cd Documents
nvi
cd .config/nvim/
nvim\\

sudo pacman -S cmatrix
cmatrix
~q
cd Code/SS
cd Code/SS/lab_3
rm 0.cpp
mv prod prod.txt
mv prod.txt prod
cd lab-4
cd ../lab-2
cd ../lab-3
../lab-3/1
ls Downloads
vim Self/notes/Nvim.md
vim $(fzf)
mv alacritty.toml 11
mv 11 alacritty.toml
cd .config/alacritty
COLORTERM
colortest-256
printf "\033[0;32m_hello_\033[0m\n" 
colorpicker --short --one-shot --preview\

cd Code/Code-Forces/969-Div-2
10 21
2 8
51 60
2 15
10 26
1 1000
4 2 3
1 3 4 6
4 7 7
1 1 2 6
3 15 9
1 9 5
3 18 12
1 4 5
7 27 36
33 13 23 12 35 24 41
10 6 9
15 5 6 9 8 2 12 15 3 8
2 1 1000000000
1 1000000000
6 336718728 709848696
552806726 474775724 15129785 371139304 178408298 13106071
6 335734893 671469786
138885253 70095920 456876775 9345665 214704906 375508929
man 1
g++ 5.cpp -o 5
./5
cat \'
rm \'
cd Code/ML/Amazon
unzip archive.zip
lspci
lspci | grep Nvdia
lspci | grep VGA
sudo pacman -Syu nvidia cuda
sudo pacman -Sy nvidia cuda
nvm_version
node -v
man cal
cal -3
sudo pacman -Sy cudnn
cd webi
cd Downloads/archive
git commit -m "Check in commit"
nvim $(fzf)
cd ~/.dotfiles
lazygit
cd /mnt
nvim Self/notes/ComputerNetworking
nvim Self/notes/Computer-Networking.md
tmux 
curl -X POST "https://accounts.spotify.com/api/token" \\
     -H "Content-Type: application/x-www-form-urlencoded" \\
     -d "grant_type=client_credentials&client_id=your-client-id&client_secret=your-client-secret"\

curl -X POST "https://accounts.spotify.com/api/token" \\
     -H "Content-Type: application/x-www-form-urlencoded" \\
     -d "grant_type=client_credentials&client_id=7f2dbbab2dbf4a39a0198699bc1c16b5&client_secret=7b6485b7550a4430b98f834d29a9b7a4"\

curl "https://api.spotify.com/v1/artists/4Z8W4fKeB5YxbusRsdQVPb" \\
     -H "Authorization: Bearer  BQDBKJ5eo5jxbtpWjVOj7ryS84khybFpP_lTqzV7uV-T_m0cTfwvdn5BnBSKPxKgEb11"\

curl "https://api.spotify.com/v1/artists/4Z8W4fKeB5YxbusRsdQVPb" \\
     -H "Authorization: Bearer  BQAik7aFMnD9elg8IvUEBpWgXFtF7CrAWAsXZNanDU8qDi4T0PSBeWH8y10l0NRIy8QOj_G69xFNAlGok8fTUobelAYRgivTxR5kdfEkUZqX2OMF-qg"
curl "https://api.spotify.com/v1/artists/4Z8W4fKeB5YxbusRsdQVPb" \\
     -H "Authorization: Bearer  BQAik7aFMnD9elg8IvUEBpWgXFtF7CrAWAsXZNanDU8qDi4T0PSBeWH8y10l0NRIy8QOj_G69xFNAlGok8fTUobelAYRgivTxR5kdfEkUZqX2OMF-qg" >> spotify.json
cat spotify.json
cat \\ 
rm \\ 
rm spotify.json
cd ML
ls lab_1
ls lab_2
ls lab_3
python3 -m venv ml
pip install numpy
pip remove numpy
pip uninstall numpy
ls .config\

g++ 3.cpp -o 3
./3
g++ 4Test.cpp -o 4
rm 4Test.cpp
5\
1\
1\
0\
5\
1 2 4 5 3\
10101\
5\
5 4 1 3 2\
10011\
6\
3 5 6 1 2 4\
010000\
6\
1 2 3 4 5 6\
100110\

5\
1\
1\
0\
5\
1 2 4 5 3\
10101\
5\
5 4 1 3 2\
10011\
6\
3 5 6 1 2 4\
010000\
6\
1 2 3 4 5 6\
100110
cat 4.cpp
rm s
rm temp temp1 test
#include <string>
#include <vector>
using namespace std;
int main(int argc, char *argv[]) {
cd Code/Code-Forces/970-Div-3
rm s temp test
ls Self/notes
cat .viminfo
nvim ~/.dotfiles/.config/nvim
cd 
cd CICD
cd ../
mv CICD CI-CD
cd CI-CD
rm -rf lab-1/ lab-2
systemctl enable --now docker.socket
man docker
systemctl --user start docker-desktop
docker compose version
systemctl --user enable docker-desktop
docker desktop
docker desktop version --help
rofi 
docker desktop run
docker desktop --help
docker desktop module ls
docker desktop module update
docker desktop version
sudo systemctl status docker
sudo systemctl start docker-desktop
touch
touch app.py
echo 'print("Hello, Microservices!")\n' >> app.py\

cat app.py
touch Dockerfile
echo '# Step 1: Specify the base image\
FROM python:3.10-slim\
\
# Step 2: Set the working directory inside the image\
WORKDIR /usr/src/app\
\
# Step 3: Copy the application code into the image\
COPY app.py .\
\
# Step 4: Define the command to run the application\
CMD ["python", "app.py"]\
' >> Dockerfile
docker build -t hello-microservices .
docker run hello-microservices\

docker -h
sudo pacman -S gnome-terminal
iptables
ps
tar xzvf docker-27.2.0.tgz
sudo cp docker/* /usr/bin/
sudo dockerd &
cd Code/CI-CD
cat Dockerfile
sudo docker build -t hello-microservices .
sudo docker images 
sudo docker login 
docker tag hello-microservices Yagnarao15/hello-microservices:latest
sudo docker tag hello-microservices Yagnarao15/hello-microservices:latest
sudo docker push Yagnarao15/hello-microservices:latest
sudo docker tag hello-microservices yagnarao15/hello-microservices:latest
sudo docker push yagnarao15/hello-microservices:latest
mkdir lab-3
mv Dockerfile lab-3/
mv app.py lab-3
mv Lab_3_U22CS104.odt lab-3
ls lab-3
rm Lab_3_U22CS104.odt
cd lab-3
touch requirements.txt
docker build -t inventory-app .\

sudo docker build -t inventory-app .\

sudo docker run -p 5000:5000 inventory-app\

nvim Code/CI-CD/lab-3
cd lab_3
cd Code/ML/c
yay -Sy pandoc-bin
man pandoc
pandoc -f ipynb -t pdf -o ~/Code/ML/lab-3/Linear-Regression.pdf ~/Code/ML/lab-3/Linear-Regression.ipynb
ipython nbconvert --to latex --post PDF lab-1/NumPy.ipynb
man ipython
pip install nbconvert
python3 venv ml
cal 2**16
cat Anaconda3-2024.06-1-Linux-x86_64.sh
6c6c6c6c6c6c6c6c6c6c6c6c6c6c6c6cc
sudo pacman -Sy python-tensorflow
tensorboard
sudo pacman -Sy tensorflow tensorflow-cuda
nvim Code/Code-Forces/970-Div-3
mkdir 971-Div-4
cd 971-Div-4
cd Code/Code-Forces/971-Div-4
cat 2.cpp
mv .local/share/nvim/ .dotfiles/.local/share/nvim/
mv .local/share/nvim-lazy .dotfiles/.local/share/nvim-lazy/
mv .local/share/nvim-kickstart .dotfiles/.local/share/nvim-kickstart/
ls .local/share
ls .dotfiles/.local/share
rm .local/share/nvim
rm .local/share/nvim-kickstart
rm .local/share/nvim-lazy
mv .dotfiles/.local/share/nvim-kickstart .local/share/nvim-kickstart/
mv .dotfiles/.local/share/nvim-lazy .local/share/nvim-lazy/
mv .dotfiles/.local/share/nvim .local/share/nvim
man rename
chmod +x ~/.dotfiles/.local/bin/nvim-name.sh
./.dotfiles/.local/bin/nvim-name.sh
ls ~
rm ~/.config/Fuck-You
mv .config/Fuck ~/.config
~/.dotfiles/.local/bin/nvim-name.sh Fuck Fuck-You
git add .
s
git commit -m "9/11 2024 LOL"
git push origin main
gs
ls\\

cat .bash_history
rm .bash_history
cat $(fzf)
ls .config/zsh/.history
cd .dotfiles/.config
cd .config
nvim-name.sh
vim ~/.viminfo
vim ~/.vim/vimrc
nvim-kickstart
ls .config
stow .
ls ~/.config
nvim-own\\
\\

mv Downloads/wallpaperflare.com_wallpaper.jpg Self/pictures/Wallpapers_Desktop/Black-Venom.jpg
cd .dotfiles
git log --graph --pretty=format:'%C(bold blue)%h%Creset %C(cyan)[%cr] %C(magenta)%an%Creset - %Creset%s%C(yellow)%d%Creset' --abbrev-commit \
}
export COLOR_RESET=$'\x1b[0m'\
export COLOR_LACK=$'\x1b[38;2;112;128;144m'\
export COLOR_LUSTER=$'\x1b[38;2;222;238;237m'\
export COLOR_ORANGE=$'\x1b[38;2;255;170;136m'\
export COLOR_GREEN=$'\x1b[38;2;120;153;120m'\
export COLOR_BLUE=$'\x1b[38;2;119;136;170m'\
export COLOR_RED=$'\x1b[38;2;215;0;0m'\
export COLOR_BLACK=$'\x1b[38;2;0;0;0m'\
export COLOR_GRAY1=$'\x1b[38;2;8;8;8m'\
export COLOR_GRAY2=$'\x1b[38;2;25;25;25m'\
export COLOR_GRAY3=$'\x1b[38;2;42;42;42m'\
export COLOR_GRAY4=$'\x1b[38;2;68;68;68m'\
export COLOR_GRAY5=$'\x1b[38;2;85;85;85m'\
export COLOR_GRAY6=$'\x1b[38;2;122;122;122m'\
export COLOR_GRAY7=$'\x1b[38;2;170;170;170m'\
export COLOR_GRAY8=$'\x1b[38;2;204;204;204m'\
export COLOR_GRAY9=$'\x1b[38;2;221;221;221m'\
\
log_red() { echo "${COLOR_RED}$@${COLOR_RESET}" }\
log_luster(){ echo "${COLOR_LUSTER}$@${COLOR_RESET}" }\
log_orange(){ echo "${COLOR_ORANGE}$@${COLOR_RESET}" }\
log_green() { echo "${COLOR_GREEN}$@${COLOR_RESET}" }\
log_blue() { echo "${COLOR_BLUE}$@${COLOR_RESET}" }\
log_black() { echo "${COLOR_BLACK}$@${COLOR_RESET}" }\
log_gray1() { echo "${COLOR_GRAY1}$@${COLOR_RESET}" }\
log_gray2() { echo "${COLOR_GRAY2}$@${COLOR_RESET}" }\
log_gray3() { echo "${COLOR_GRAY3}$@${COLOR_RESET}" }\
log_gray4() { echo "${COLOR_GRAY4}$@${COLOR_RESET}" }\
log_gray5() { echo "${COLOR_GRAY5}$@${COLOR_RESET}" }\
log_gray6() { echo "${COLOR_GRAY6}$@${COLOR_RESET}" }\
log_gray7() { echo "${COLOR_GRAY7}$@${COLOR_RESET}" }\
log_gray8() { echo "${COLOR_GRAY8}$@${COLOR_RESET}" }\
log_gray9() { echo "${COLOR_GRAY9}$@${COLOR_RESET}" }
git log --graph --pretty=format:'%C(bold blue)%h%Creset %C(cyan)[%cr] %C(magenta)%an%Creset - %Creset%s%C(yellow)%d%Creset' --abbrev-commit \

$(fortune -s -n 50)
echo $(fortune -s -n 50)
g++ test.cpp
./a.out
rm a.out test.cpp
cd Code/SS/lab-4
touch prod
g++ -g -o 1 1.cpp
sudo pacman -Sy gdb
gdb ./1
mv ~/Downloads/51.cpp ~/Code/SS/lab-5
g++ 51.cpp -o 1
mv ~/Downloads/5.text ~/Code/SS/lab-5/
cat 5.text
cat prod.txt
mv 66e31d6ee96cd_student_resource_3.zip ~/Code/ML/Amazon
cd ~/Code/ML/Amazon
unzip 66e31d6ee96cd_student_resource_3.zip
cd student_resource\ 3
cd ../../
p
ping google.com\\
\\

sudo pacman -Sy python-tqdm
cd Code/ML/Amazon/student_resource\ 3
cat README.md
sudo pacman -Sy python-pytesseract
man pytesseract 
pytesseract en images/1yw53vfQtS.jpg
pytesseract -l en images/1yw53vfQtS.jpg
sudo pacman -Sy tesseract-data-eng
sudo pacman -S tesseract\
sudo pacman -S tesseract-data-eng\

pytesseract -l en images/1yw53vfQtS.jpg\

cat Code/ML/Amazon/student_resource\ 3/README.md
cd ../Desktop/\\

curl https://m.media-amazon.com/images/I/71XfHPR36-L.jpg
curl https://m.media-amazon.com/images/I/71XfHPR36-L.jpg --output 71XfHPR36-L.jpg
pytesseract -l en 71XfHPR36-L.jpg
echo TESSDATA_PREFIX
echo $TESSDATA_PREFIX
sudo chmod 755 /usr/share/tessdata/\
sudo chmod 644 /usr/share/tessdata/en.traineddata\

ls /usr/share/tessdata/\

pytesseract -l eng 71XfHPR36-L.jpg
curl https://m.media-amazon.com/images/I/91LPf6OjV9L.jpg --output 1.jpg
pytesseract -l eng 1.jpg
pip install git+https://github.com/faustomorales/keras-ocr.git#egg=keras-ocr
source ml/bin/activate\

pip install keras-ocr
pip install tensorflow
python3 -v
python3 --version
pip install keras-ocr tensorflow==2.4 keras==2.4.3\

touch test.py
echo "import keras_ocr\
\
# Initialize the pipeline again\
pipeline = keras_ocr.pipeline.Pipeline()\
" >> test.py
export CUDA_VISIBLE_DEVICES=""\

nvim /home/yagna/Desktop/ml/lib/python3.12/site-packages/keras_ocr/recognition.py
;w
pip install IPython.display
pip install IPython
nvim test.py
curl https://m.media-amazon.com/images/I/81e2YtCOKvL.jpg --output 2.jpg
curl https://m.media-amazon.com/images/I/71mKPQGo8wL.jpg --output 3.jpg
$((263859 - 234981))
echo $((263859 - 234981))
tesseract --help
sh
pytesseract -l eng 3.jpg
pytesseract -l eng 2.jpg
pytesseract -l eng 2_1.jpg
pytesseract -l eng 3_1.jpg
cd Desktop
tesseract -l eng ./3_1.jpg
tesseract --version\

tesseract --list_langs
tesseract --list-langs
python3 test.py
sudo pacman -S python-pip\
pip install torch torchvision torchaudio\

cat .config/zsh/.history
cat ~/.config/zsh/.history
pip install torch torchvision torchaudio\

sudo pacman -Syu pytorch\

sudo pacman -Syu python-pytorch-cuda
tensorflow
python3
rm .x11
rm .python_history
cat sudo
python3 ml
source ml/bin/activate
pip list --verbose\

rm -rf ~/Code/ML/ml
pip
python venv list
woken
find ~ -type d -name "bin" -exec test -f "{}/activate" \; -print\

cd Code
cd ~/.local
rm -rf anaconda3
rm -rf ~/.conda ~/.continuum ~/.anaconda_backup\

nvim ~/.config/bash/bash_history
nvim ~/.config/bash/.bashrc
conda\

rm -rf anaconda3\
rm -rf ~/anaconda3\
sudo rm -rf /opt/anaconda3
ls ~/.local/share/virtualenvs/\

conda env list\

python-tensorflow
python3-tensorflow
python -m venv ml
pip install --upgrade pip setuptools\

docker -v
sudo groupadd docker
sudo usermod -aG docker $USER
exit
newgrp docker
sudo systemctl enable docker.service\
\
 sudo systemctl enable containerd.service
docker run hello-world
docker pull tensorflow/tensorflow:latest-gpu-jupyter
sudo docker pull tensorflow/tensorflow:latest-gpu-jupyter
sudo pacman -Sy nvidia-container-toolkit
docker run -it --rm tensorflow/tensorflow:latest-gpu-jupyter \\
   python -c "import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))"
sudo docker run -it --rm tensorflow/tensorflow:latest-gpu-jupyter \\
   python3 -c "import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))"
sudo docker run -it --rm tensorflow/tensorflow \\
   python -c "import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))"
sudo docker run -it --rm tensorflow/tensorflow:latest-gpu-jupyter \\
   python -c "import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))"
docker run -it tensorflow/tensorflow bash\

sudo docker run -it tensorflow/tensorflow bash\

sudo docker run -it tensorflow/tensorflow:latest-gpu-jupyter bash\

sudo docker run -it -p 8888:8888 tensorflow/tensorflow:latest-gpu-jupyter bash\

sudo systemctl start docker\

sudo systemctl status docker\

ls -l /var/run/docker.sock\

echo $USER
sudo usermod -aG docker $USER\

sudo docker run -u $(id -u):$(id -g) -it -p 8888:8888 tensorflow/tensorflow:latest-gpu-jupyter bash\

sudo docker run -u $(id -u):$(id -g) -it -p 8888:8888 tensorflow/tensorflow:latest-gpu-jupyter bash
sudo ldconfig\

docker run -u $(id -u):$(id -g) -it -p 8888:8888 tensorflow/tensorflow:latest-gpu-jupyter bash\

sudo docker run -u root -it -p 8888:8888 tensorflow/tensorflow:latest-gpu-jupyter bash\

docker ps
sudo docker logs 7f4518f69e70\

lspci | grep -i nvidia\

docker run --gpus all --rm nvidia/cuda nvidia-smi
sudo docker run --gpus all --rm nvidia/cuda nvidia-smi
docker run --gpus all -it tensorflow/tensorflow:latest-gpu-jupyter bash\

V
sudo docker run --gpus all --rm nvidia/cuda:11.7-base nvidia-smi\

sudo nvidia-ctk runtime configure --runtime=docker
sudo systemctl restart docker
nvidia-ctk runtime configure --runtime=docker --config=$HOME/.config/docker/daemon.json
systemctl --user restart docker
sudo systemctl --user restart docker
sudo nvidia-ctk config --set nvidia-container-cli.no-cgroups --in-place
stratx
sudo docker run --gpus all -it tensorflow/tensorflow:2.14.0-gpu bash\

pip install tensorflow-gpu==2.4.0\

pip show tensorflow keras-ocr\

pip install tensorflow==2.4.0\

pip install jupyter
pip install ipykernel\
python -m ipykernel install --user --name=keras-ocr --display-name "Python (myenv)"\

pip remove tensorflow
source keras-ocr-env/bin/activate
pip uninstall tensorflow
pip uninstall jupyter
pip uninstall
pip uninstall *
pip uninstall keras-ocr
deactivate
rm -rf keras-ocr-env
python -m venv keras-ocr-env\
source keras-ocr-env/bin/activate  # On Windows, use keras-ocr-env\Scripts\activate\

pip lisr
pip install tensorflow==2.15
python3 -m pip install tensorflow[and-cuda]
python3 -m pip install tensorflow-cuda
python3 -m pip install tensorflow-gpu
python3 -m pip install tensorflow
pip install tensorflow\
\

python3 -c "import tensorflow as tf; print(tf.reduce_sum(tf.random.normal([1000, 1000])))"\

python3 -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"\

pip install tensorflow-gpu
cd ~/Desktop
tesseract -l eng 3_1.jpg
tesseract -l eng 3.jpg
tesseract -l eng --oem 3 --psm 6 -3.jpg
tesseract -l eng --oem 3 --psm 6 3.jpg
tesseract -l eng 1.jpg
sudo docker run --gpus all -it tensorflow/tensorflow:latest-gpu-jupyter bash\

sudo docker run --gpus all -it -p 8888:8888 tensorflow/tensorflow:latest-gpu-jupyter bash\

jupyter-notebook
mkdir -p ~/.local/miniconda3\
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/.local/miniconda3/miniconda.sh\
cd ~/.local/miniconda3\
chmod +x miniconda.sh\
./miniconda.sh
./miniconda.sh
conda --version
conda activate
conda create --name ML
conda env \list
sudo pacman -Sy inxi
inxi -G
sudo pacman -Syu nvidia-driver-supported-branches
sudo pacman -Syu nvidia-dkms nvidia-utils nvidia-settings
nvidia-driver-supported-branches
conda install tensorflow-gpu
conda install jupyter
nvim Code/ML
python3 main.py
nvim main.py
sudo pacman R python-jupyter
sudo pacman -R jupyter-notebook
sudo pacman -R jupyterlab
sudo pacman -R jupyterlab-pygments
sudo pacman -R jupyter-nbconvert
sudo pacman -R jupyter-server
sudo pacman -R jupyter-notebook-shim
sudo pacman -R python-jupyter-client
sudo pacman -R python-jupyterlab-server
conda install anaconda::keras-ocr
pip install keras-ocr\

cat /home/yagna/.keras-ocr/craft_mlt_25k.h5
lsmod | grep nvidia\

nvidia-settings --version
sudo pacman -Syu\
sudo pacman -S nvidia nvidia-utils nvidia-settings\

sudo dkms status\

uname -r\

conda install pandas numpy matplotlib nlyk sklearn
conda install pandas numpy matplotlib
conda install anaconda::scikit-learn
conda install nltk
conda install csv re
conda install anaconda::csvkit anaconda::regex
cp Code/ML/Amazon/images/2198wsIefsL.jpg Desktop
ls Desktop
conda install pytesseract
watch -n 1 nvidia-smi
conda en
neofetch
fastfetch
htop
cd Code/ML
nvidia-smi
nvim .dotfiles/.config/zsh/.zshenv
nvcc --version\

yay -Ss cudnn\

yay -S cudnn\

source ~/.config/zsh/.zshrc
ls /usr/local/cuda/include/cudnn*.h\
ls /usr/local/cuda/lib64/libcudnn*\

nvidia-smi\

sudo ln -s /usr/lib/cudnn*.h /usr/local/cuda/include/\
sudo ln -s /usr/lib/libcudnn* /usr/local/cuda/lib64/\

echo $PATH\
echo $LD_LIBRARY_PATH\

sudo pacman -R cuda cudnn\

yay -S cuda\
yay -S cudnn\

echo $((22000 / 2))
cat Downloads/Model.md
cat Code/ML/Amazon/README.md
man sed
man diff
diff Downloads/notebook807906aa6e\(1\).ipynb
diff Downloads/notebook807906aa6e\(1\).ipynb Downloads/notebook807906aa6e\(2\).ipynb
man bc
cd Code/Archive
pwd
oh-my-posh upgrade
vi
cal
Cd Code/PPA
cd Code/PPA
l
cp ../lab-3/Lab_3_U22CS104_PPA.odt ./
mv Lab_3_U22CS104_PPA.odt Lab_5_U22CS104_PPA.odt
cd ../../CI-CD
mkdir lab-5
cd lab-5
cp ../lab-4/Lab_4_U22CS104_CICD.odt ./
conda create --name test
conda deactivate\

sudo pacman -y python-flask
pip list
pip install --upgrade pip\

sudo pacman 
sudo pacman -S python-flask
find /var/cache/pacman/pkg/ -iname "*.part" -delete\

sudo find /var/cache/pacman/pkg/ -iname "*.part" -delete\

sudo fuser /var/lib/pacman/db.lck
rm /var/lib/pacman/db.lck
sudo rm /var/lib/pacman/db.lck
sudo pacman -Sy python-flask
conda activate test
conda list
conda env list
pip install flask\\
\\

jupyter notebook
conda activate ML
pip install flask
curl http://localhost:5000/greet\

sudo docker images
python3 app.py
curl http://localhost:5000/items\

sudo docker run hello-world
sudo docker run hello-microservices
sudo docker run -it -p 8888:8888 tensorflow/tensorflow:latest-gpu-jupyter bash
cat ~/.config/zsh/.history | fzf
cp ../lab-3/requirements.txt ./
sudo docker build -t flask-microservice\

sudo docker build -t flask-microservice .\
 
cd Code/CI-CD/lab-5
nvim ../lab-3/app.py
sudo docker run -p 5000:5000 inventory-app\\

tmux
sudo docker run -p 5000:5000 flask-microservice\

sudo docker ps
ls ../lab-5
cd Code/PPA/lab-4
nvim 
cat 1.cpp
mpicc 1.cpp -o 1
mpi++ 1.cpp -o 1
mpicc -o 1 1.cpp
mpicc 1.cpp
mpic++ 1.cpp -o 1
mpirun -np 2 ./2
cat 2.c
yazi
cd Code/PPA/lab-5
mpicc 1.c -o 1
mpirun -np 4 ./1
cat 1.c
mpicc 2.c -o 2
mpirun -np 4 ./2
nvim ~/.config/zsh/.zshrc
ip config
ip addr
cd Downloads
..
mkdir lab-6
cd lab-6
gcc 1.c -o 1
cd Code/SS/lab-5
cd ../lab-4
cd ../lab-5
cd ../lab-6
nvim-own
cd Code/SS/lab-6
ls 
;q
vim
curl https://172.16.1.1:8090
startx
flatpak install flathub io.github.zen_browser.zen
flatpak list
yay -S zen-browser
sudo pacman -Rnsc yay
ya
ls /tmp
cd /tmp\
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
yay
cd ..
rm -rf yay\

cd
yay -S zen-browser-bin 1.0.1.a.2-1
pacman -Rcns gnome
sudo pacman -Rcns gnome
sudo pacman -Rcns gnome gnome-shell gnome-session\

sudo pacman -Rns $(pacman -Qdtq)
sudo pacman -Syu
sudo pacman -Sy nautilus
sudo pacman -R gnome-terminal gnome-tweaks
sudo pacman -R gnome-tweaks
ping google.com
mkdir 973-Div-2
cxd 973-Div-2
nvim
cd Code/Code-Forces
cd 9
cd 973-Div-2
3
1 2
6
100
4 3
9
3 3
c
g++ 1.cpp -o 1
./1
g++ 2.cpp -o 2
./2
ls
g++ 4.cpp -o 4
./4
q
: 1726851950:0;ping google.com
: 1726852014:0;htop
: 1726858761:0;ping google.com
: 1726858796:0;nvim
: 1726858852:0;ping pornhub.com
: 1726858860:0;ping google.com
: 1726858875:0;pp
: 1726862306:0;nvim
: 1726866559:0;vim
: 1726866594:0;nvim-own
: 1726866631:0;nvim
: 1726867477:0;nvim-own
: 1726867665:0;git clone https://github.com/gabsdotco/init.lua.git ~/.config/nvim-test
: 1726867679:0;ls .config/nvim-test
: 1726867685:0;nvim
: 1726867724:0;nvim-test
: 1726867807:0;nvim
: 1726867853:0;cd .dotfiles
: 1726867854:0;ls
: 1726867855:0;gs
: 1726867897:0;git add .
